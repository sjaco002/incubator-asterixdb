/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * Description  : Verify Function Dependency Metadata
 * Expected Res : Success
 * Date         : Dec 15th 2017
 */

drop dataverse two if exists;
drop dataverse experiments if exists;
create dataverse experiments;
use experiments;

create type TweetMessageType as closed {
  tweetid: uuid,
  sender_location: point,
  send_time: datetime,
  referred_topics: {{ string }},
  message_text: string,
  countA: int32,
  countB: int32
};

create dataset TweetMessages(TweetMessageType)
primary key tweetid autogenerated;

create function f1(message, text){
  contains(message,text)
};

create function f4(){
(select * from TweetMessages)
};

create dataverse two;
use two;

create dataset TweetMessages2(experiments.TweetMessageType)
primary key tweetid autogenerated;

create function f0(message, text){
  contains(message,text)
};

create function experiments.f2(place, text) {
  (select m.message_text
  from TweetMessages m
  where contains(m.message_text,text)
  and spatial_intersect(m.sender_location, place)
  and f1(m.message_text,text)
  and two.f0(m.message_text,text))
};

create function experiments.f3(place, text) {
  f2(place, text)
};

create function f5(place, text){
 (select m.message_text
  from TweetMessages2 m, experiments.TweetMessages m2
  where contains(m.message_text,text)
  and spatial_intersect(m.sender_location, place)
  and experiments.f1(m.message_text,text)
  and f0(m2.message_text,text))
};