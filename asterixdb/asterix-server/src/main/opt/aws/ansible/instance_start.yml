# ------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
# ------------------------------------------------------------

- hosts: all
  tasks:
    - include_vars: ../conf/instance_settings.yml

    - name: Download JDK
      shell: "wget -q --tries=5 --no-cookies --no-check-certificate --header \
              \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" \
              \"http://download.oracle.com/otn-pub/java/jdk/8u121-b13/e9e7ea248e2c4826b92b3f075a80e441/jdk-8u121-linux-x64.rpm\""

    - name: Install JDK
      shell: sudo yum -y localinstall jdk-8u121-linux-x64.rpm

    - name: Deploy binaries
      synchronize:
          src: "{{ dist }}"
          dest: "{{ binarydir }}"
          archive: true

    - name: Ensure the log directory exists
      file:
        path: "{{ binarydir }}/logs"
        state: directory

- hosts: ncs
  tasks:
    - include_vars: ../conf/instance_settings.yml


    - name: Ensure the io device directory exit
      file:
          path: "{{ basedir }}/iodevice"
          state: directory

    - name: Start NC Service
      shell: nohup "{{ ncservice }}" &> "{{ binarydir }}/logs/ncservice.log" &
      async: 10
      poll: 0

- hosts: cc
  tasks:
    - include_vars: ../conf/instance_settings.yml

    - name: Copy cluster config to CC
      synchronize:
        src: /tmp/asterixdb/cc.conf
        dest: "{{ basedir }}/cc.conf"

    - name: Update cluster config
      shell: find -P "{{ basedir }}/cc.conf"|xargs perl -pi -e 's|command=asterixnc|command={{ ncbin }}|g'

    - name: Start CC
      shell: nohup "{{ cc }}" -config-file "{{ basedir }}/cc.conf" &> "{{ binarydir }}/logs/cc.log" &
      async: 10
      poll: 0
